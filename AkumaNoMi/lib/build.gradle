/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 */
 

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    // Apply the java-library plugin for API and implementation separation.
    id 'application'

    id 'java-library'
}

mainClassName = 'AkumaNoMi'


sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }  
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

dependencies {
    
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    implementation 'com.google.inject:guice:5.1.0'
 
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'

    compileOnly 'org.spigotmc:spigot-api:1.19.1-R0.1-SNAPSHOT'
    implementation "co.aikar:acf-paper:0.5.1-SNAPSHOT"
}

 configurations {
    archivesBaseName = 'AkumaNoMi'
    version = '1.0-SNAPSHOT'
    group = 'dev'  
 }

 task copyJarToServer(type: Copy) {
    from shadowJar
    into "C://Users/rafae/Downloads/akumanomi/plugins"
}

shadowJar {
    relocate 'com.google', 'akumanomi.google'

   relocate 'co.aikar.commands', 'akumanomi.acf'
   relocate 'co.aikar.locales', 'akumanomi.locales'
}

build.dependsOn shadowJar
build.dependsOn copyJarToServer

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
